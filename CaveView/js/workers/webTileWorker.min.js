!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";class t{constructor(t){const s=t.tileSet,e=t.clip;let i,r,h;if(t.z>s.maxZoom){const n=Math.pow(2,t.z-s.maxZoom);i=Math.floor(t.x/n),r=Math.floor(t.y/n),h=s.maxZoom;const a=s.divisions,o=a*(t.x%n)/n,u=(a+1)*(a*(t.y%n))/n;e.dtmOffset=u+o,e.dtmWidth=a+1}else i=t.x,r=t.y,h=t.z,e.dtmOffset=0;const n=s.directory+"/"+h+"/DTM-"+i+"-"+r+".bin";return fetch(n).then((t=>{if(!t.ok)throw TypeError;return t.arrayBuffer()}))}}const s=[];for(let t=0;t<256;t++)s[t]=(t<16?"0":"")+t.toString(16);const e="undefined"!=typeof crypto&&"randomUUID"in crypto;function i(){if(e)return crypto.randomUUID().toUpperCase();const t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0,h=4294967295*Math.random()|0;return(s[255&t]+s[t>>8&255]+s[t>>16&255]+s[t>>24&255]+"-"+s[255&i]+s[i>>8&255]+"-"+s[i>>16&15|64]+s[i>>24&255]+"-"+s[63&r|128]+s[r>>8&255]+"-"+s[r>>16&255]+s[r>>24&255]+s[255&h]+s[h>>8&255]+s[h>>16&255]+s[h>>24&255]).toUpperCase()}function r(t,s,e){return Math.max(s,Math.min(e,t))}function h(t,s,e){return(1-e)*t+e*s}class n{constructor(t=0,s=0,e=0,i=1){this._x=t,this._y=s,this._z=e,this._w=i}static slerp(t,s,e,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),e.slerpQuaternions(t,s,i)}static slerpFlat(t,s,e,i,r,h,n){let a=e[i+0],o=e[i+1],u=e[i+2],l=e[i+3];const c=r[h+0],m=r[h+1],y=r[h+2],d=r[h+3];if(0===n)return t[s+0]=a,t[s+1]=o,t[s+2]=u,void(t[s+3]=l);if(1===n)return t[s+0]=c,t[s+1]=m,t[s+2]=y,void(t[s+3]=d);if(l!==d||a!==c||o!==m||u!==y){let t=1-n;const s=a*c+o*m+u*y+l*d,e=s>=0?1:-1,i=1-s*s;if(i>Number.EPSILON){const r=Math.sqrt(i),h=Math.atan2(r,s*e);t=Math.sin(t*h)/r,n=Math.sin(n*h)/r}const r=n*e;if(a=a*t+c*r,o=o*t+m*r,u=u*t+y*r,l=l*t+d*r,t===1-n){const t=1/Math.sqrt(a*a+o*o+u*u+l*l);a*=t,o*=t,u*=t,l*=t}}t[s]=a,t[s+1]=o,t[s+2]=u,t[s+3]=l}static multiplyQuaternionsFlat(t,s,e,i,r,h){const n=e[i],a=e[i+1],o=e[i+2],u=e[i+3],l=r[h],c=r[h+1],m=r[h+2],y=r[h+3];return t[s]=n*y+u*l+a*m-o*c,t[s+1]=a*y+u*c+o*l-n*m,t[s+2]=o*y+u*m+n*c-a*l,t[s+3]=u*y-n*l-a*c-o*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,e,i){return this._x=t,this._y=s,this._z=e,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const e=t._x,i=t._y,r=t._z,h=t._order,n=Math.cos,a=Math.sin,o=n(e/2),u=n(i/2),l=n(r/2),c=a(e/2),m=a(i/2),y=a(r/2);switch(h){case"XYZ":this._x=c*u*l+o*m*y,this._y=o*m*l-c*u*y,this._z=o*u*y+c*m*l,this._w=o*u*l-c*m*y;break;case"YXZ":this._x=c*u*l+o*m*y,this._y=o*m*l-c*u*y,this._z=o*u*y-c*m*l,this._w=o*u*l+c*m*y;break;case"ZXY":this._x=c*u*l-o*m*y,this._y=o*m*l+c*u*y,this._z=o*u*y+c*m*l,this._w=o*u*l-c*m*y;break;case"ZYX":this._x=c*u*l-o*m*y,this._y=o*m*l+c*u*y,this._z=o*u*y-c*m*l,this._w=o*u*l+c*m*y;break;case"YZX":this._x=c*u*l+o*m*y,this._y=o*m*l+c*u*y,this._z=o*u*y-c*m*l,this._w=o*u*l-c*m*y;break;case"XZY":this._x=c*u*l-o*m*y,this._y=o*m*l-c*u*y,this._z=o*u*y+c*m*l,this._w=o*u*l+c*m*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+h)}return!1!==s&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const e=s/2,i=Math.sin(e);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,e=s[0],i=s[4],r=s[8],h=s[1],n=s[5],a=s[9],o=s[2],u=s[6],l=s[10],c=e+n+l;if(c>0){const t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(u-a)*t,this._y=(r-o)*t,this._z=(h-i)*t}else if(e>n&&e>l){const t=2*Math.sqrt(1+e-n-l);this._w=(u-a)/t,this._x=.25*t,this._y=(i+h)/t,this._z=(r+o)/t}else if(n>l){const t=2*Math.sqrt(1+n-e-l);this._w=(r-o)/t,this._x=(i+h)/t,this._y=.25*t,this._z=(a+u)/t}else{const t=2*Math.sqrt(1+l-e-n);this._w=(h-i)/t,this._x=(r+o)/t,this._y=(a+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let e=t.dot(s)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(r(this.dot(t),-1,1)))}rotateTowards(t,s){const e=this.angleTo(t);if(0===e)return this;const i=Math.min(1,s/e);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,s){return void 0!==s?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,s)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const e=t._x,i=t._y,r=t._z,h=t._w,n=s._x,a=s._y,o=s._z,u=s._w;return this._x=e*u+h*n+i*o-r*a,this._y=i*u+h*a+r*n-e*o,this._z=r*u+h*o+e*a-i*n,this._w=h*u-e*n-i*a-r*o,this._onChangeCallback(),this}slerp(t,s){if(0===s)return this;if(1===s)return this.copy(t);const e=this._x,i=this._y,r=this._z,h=this._w;let n=h*t._w+e*t._x+i*t._y+r*t._z;if(n<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,n=-n):this.copy(t),n>=1)return this._w=h,this._x=e,this._y=i,this._z=r,this;const a=1-n*n;if(a<=Number.EPSILON){const t=1-s;return this._w=t*h+s*this._w,this._x=t*e+s*this._x,this._y=t*i+s*this._y,this._z=t*r+s*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),u=Math.atan2(o,n),l=Math.sin((1-s)*u)/o,c=Math.sin(s*u)/o;return this._w=h*l+this._w*c,this._x=e*l+this._x*c,this._y=i*l+this._y*c,this._z=r*l+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,s,e){this.copy(t).slerp(s,e)}random(){const t=Math.random(),s=Math.sqrt(1-t),e=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(s*Math.cos(i),e*Math.sin(r),e*Math.cos(r),s*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}n.prototype.isQuaternion=!0;class a{constructor(t=0,s=0,e=0){this.x=t,this.y=s,this.z=e}set(t,s,e){return void 0===e&&(e=this.z),this.x=t,this.y=s,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t,s){return void 0!==s?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,s)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(u.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(u.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,e=this.y,i=this.z,r=t.elements;return this.x=r[0]*s+r[3]*e+r[6]*i,this.y=r[1]*s+r[4]*e+r[7]*i,this.z=r[2]*s+r[5]*e+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,e=this.y,i=this.z,r=t.elements,h=1/(r[3]*s+r[7]*e+r[11]*i+r[15]);return this.x=(r[0]*s+r[4]*e+r[8]*i+r[12])*h,this.y=(r[1]*s+r[5]*e+r[9]*i+r[13])*h,this.z=(r[2]*s+r[6]*e+r[10]*i+r[14])*h,this}applyQuaternion(t){const s=this.x,e=this.y,i=this.z,r=t.x,h=t.y,n=t.z,a=t.w,o=a*s+h*i-n*e,u=a*e+n*s-r*i,l=a*i+r*e-h*s,c=-r*s-h*e-n*i;return this.x=o*a+c*-r+u*-n-l*-h,this.y=u*a+c*-h+l*-r-o*-n,this.z=l*a+c*-n+o*-h-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,e=this.y,i=this.z,r=t.elements;return this.x=r[0]*s+r[4]*e+r[8]*i,this.y=r[1]*s+r[5]*e+r[9]*i,this.z=r[2]*s+r[6]*e+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this.z=t.z+(s.z-t.z)*e,this}cross(t,s){return void 0!==s?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,s)):this.crossVectors(this,t)}crossVectors(t,s){const e=t.x,i=t.y,r=t.z,h=s.x,n=s.y,a=s.z;return this.x=i*a-r*n,this.y=r*h-e*a,this.z=e*n-i*h,this}projectOnVector(t){const s=t.lengthSq();if(0===s)return this.set(0,0,0);const e=t.dot(this)/s;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return o.copy(this).projectOnVector(t),this.sub(o)}reflect(t){return this.sub(o.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const e=this.dot(t)/s;return Math.acos(r(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y,i=this.z-t.z;return s*s+e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,e){const i=Math.sin(s)*t;return this.x=i*Math.sin(e),this.y=Math.cos(s)*t,this.z=i*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,e){return this.x=t*Math.sin(s),this.y=e,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=e,this.z=i,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,4*s)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,3*s)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s,e){return void 0!==e&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),s=Math.random()*Math.PI*2,e=Math.sqrt(1-t**2);return this.x=e*Math.cos(s),this.y=e*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}a.prototype.isVector3=!0;const o=new a,u=new n;class l{constructor(t=0,s=0){this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,e=this.y,i=t.elements;return this.x=i[0]*s+i[3]*e+i[6],this.y=i[1]*s+i[4]*e+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y;return s*s+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s,e){return void 0!==e&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const e=Math.cos(s),i=Math.sin(s),r=this.x-t.x,h=this.y-t.y;return this.x=r*e-h*i+t.x,this.y=r*i+h*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}l.prototype.isVector2=!0;class c{constructor(t=new a(1/0,1/0,1/0),s=new a(-1/0,-1/0,-1/0)){this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=1/0,e=1/0,i=1/0,r=-1/0,h=-1/0,n=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],u=t[a+1],l=t[a+2];o<s&&(s=o),u<e&&(e=u),l<i&&(i=l),o>r&&(r=o),u>h&&(h=u),l>n&&(n=l)}return this.min.set(s,e,i),this.max.set(r,h,n),this}setFromBufferAttribute(t){let s=1/0,e=1/0,i=1/0,r=-1/0,h=-1/0,n=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),u=t.getY(a),l=t.getZ(a);o<s&&(s=o),u<e&&(e=u),l<i&&(i=l),o>r&&(r=o),u>h&&(h=u),l>n&&(n=l)}return this.min.set(s,e,i),this.max.set(r,h,n),this}setFromPoints(t){this.makeEmpty();for(let s=0,e=t.length;s<e;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const e=y.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const s=t.geometry;void 0!==s&&(null===s.boundingBox&&s.computeBoundingBox(),d.copy(s.boundingBox),d.applyMatrix4(t.matrixWorld),this.union(d));const e=t.children;for(let t=0,s=e.length;t<s;t++)this.expandByObject(e[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,y),y.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,e;return t.normal.x>0?(s=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),s<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(z),w.subVectors(this.max,z),x.subVectors(t.a,z),p.subVectors(t.b,z),g.subVectors(t.c,z),f.subVectors(p,x),b.subVectors(g,p),M.subVectors(x,g);let s=[0,-f.z,f.y,0,-b.z,b.y,0,-M.z,M.y,f.z,0,-f.x,b.z,0,-b.x,M.z,0,-M.x,-f.y,f.x,0,-b.y,b.x,0,-M.y,M.x,0];return!!A(s,x,p,g,w)&&(s=[1,0,0,0,1,0,0,0,1],!!A(s,x,p,g,w)&&(_.crossVectors(f,b),s=[_.x,_.y,_.z],A(s,x,p,g,w)))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return y.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(y).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(m[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),m[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),m[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),m[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),m[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),m[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),m[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),m[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(m)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}c.prototype.isBox3=!0;const m=[new a,new a,new a,new a,new a,new a,new a,new a],y=new a,d=new c,x=new a,p=new a,g=new a,f=new a,b=new a,M=new a,z=new a,w=new a,_=new a,S=new a;function A(t,s,e,i,r){for(let h=0,n=t.length-3;h<=n;h+=3){S.fromArray(t,h);const n=r.x*Math.abs(S.x)+r.y*Math.abs(S.y)+r.z*Math.abs(S.z),a=s.dot(S),o=e.dot(S),u=i.dot(S);if(Math.max(-Math.max(a,o,u),Math.min(a,o,u))>n)return!1}return!0}class v{addEventListener(t,s){void 0===this._listeners&&(this._listeners={});const e=this._listeners;void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(s)&&e[t].push(s)}hasEventListener(t,s){if(void 0===this._listeners)return!1;const e=this._listeners;return void 0!==e[t]&&-1!==e[t].indexOf(s)}removeEventListener(t,s){if(void 0===this._listeners)return;const e=this._listeners[t];if(void 0!==e){const t=e.indexOf(s);-1!==t&&e.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const s=this._listeners[t.type];if(void 0!==s){t.target=this;const e=s.slice(0);for(let s=0,i=e.length;s<i;s++)e[s].call(this,t);t.target=null}}}class k{constructor(t=0,s=0,e=0,i=1){this.x=t,this.y=s,this.z=e,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,e,i){return this.x=t,this.y=s,this.z=e,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,e=this.y,i=this.z,r=this.w,h=t.elements;return this.x=h[0]*s+h[4]*e+h[8]*i+h[12]*r,this.y=h[1]*s+h[5]*e+h[9]*i+h[13]*r,this.z=h[2]*s+h[6]*e+h[10]*i+h[14]*r,this.w=h[3]*s+h[7]*e+h[11]*i+h[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,e,i,r;const h=.01,n=.1,a=t.elements,o=a[0],u=a[4],l=a[8],c=a[1],m=a[5],y=a[9],d=a[2],x=a[6],p=a[10];if(Math.abs(u-c)<h&&Math.abs(l-d)<h&&Math.abs(y-x)<h){if(Math.abs(u+c)<n&&Math.abs(l+d)<n&&Math.abs(y+x)<n&&Math.abs(o+m+p-3)<n)return this.set(1,0,0,0),this;s=Math.PI;const t=(o+1)/2,a=(m+1)/2,g=(p+1)/2,f=(u+c)/4,b=(l+d)/4,M=(y+x)/4;return t>a&&t>g?t<h?(e=0,i=.707106781,r=.707106781):(e=Math.sqrt(t),i=f/e,r=b/e):a>g?a<h?(e=.707106781,i=0,r=.707106781):(i=Math.sqrt(a),e=f/i,r=M/i):g<h?(e=.707106781,i=.707106781,r=0):(r=Math.sqrt(g),e=b/r,i=M/r),this.set(e,i,r,s),this}let g=Math.sqrt((x-y)*(x-y)+(l-d)*(l-d)+(c-u)*(c-u));return Math.abs(g)<.001&&(g=1),this.x=(x-y)/g,this.y=(l-d)/g,this.z=(c-u)/g,this.w=Math.acos((o+m+p-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this.z=t.z+(s.z-t.z)*e,this.w=t.w+(s.w-t.w)*e,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s,e){return void 0!==e&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}k.prototype.isVector4=!0;const B={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},E={h:0,s:0,l:0},C={h:0,s:0,l:0};function T(t,s,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?t+6*(s-t)*e:e<.5?s:e<2/3?t+6*(s-t)*(2/3-e):t}function R(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function V(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class q{constructor(t,s,e){return void 0===s&&void 0===e?this.set(t):this.setRGB(t,s,e)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,s,e){return this.r=t,this.g=s,this.b=e,this}setHSL(t,s,e){var i;if(t=(t%(i=1)+i)%i,s=r(s,0,1),e=r(e,0,1),0===s)this.r=this.g=this.b=e;else{const i=e<=.5?e*(1+s):e+s-e*s,r=2*e-i;this.r=T(r,i,t+1/3),this.g=T(r,i,t),this.b=T(r,i,t-1/3)}return this}setStyle(t){function s(s){void 0!==s&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=e[1],r=e[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,s(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,s(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const e=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return s(t[4]),this.setHSL(e,i,r)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=e[1],s=t.length;if(3===s)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===s)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const s=B[t.toLowerCase()];return void 0!==s?this.setHex(s):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,s=2){return this.r=Math.pow(t.r,s),this.g=Math.pow(t.g,s),this.b=Math.pow(t.b,s),this}copyLinearToGamma(t,s=2){const e=s>0?1/s:1;return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=R(t.r),this.g=R(t.g),this.b=R(t.b),this}copyLinearToSRGB(t){return this.r=V(t.r),this.g=V(t.g),this.b=V(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){const s=this.r,e=this.g,i=this.b,r=Math.max(s,e,i),h=Math.min(s,e,i);let n,a;const o=(h+r)/2;if(h===r)n=0,a=0;else{const t=r-h;switch(a=o<=.5?t/(r+h):t/(2-r-h),r){case s:n=(e-i)/t+(e<i?6:0);break;case e:n=(i-s)/t+2;break;case i:n=(s-e)/t+4}n/=6}return t.h=n,t.s=a,t.l=o,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,s,e){return this.getHSL(E),E.h+=t,E.s+=s,E.l+=e,this.setHSL(E.h,E.s,E.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,s){return this.r=t.r+s.r,this.g=t.g+s.g,this.b=t.b+s.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,s){return this.r+=(t.r-this.r)*s,this.g+=(t.g-this.g)*s,this.b+=(t.b-this.b)*s,this}lerpColors(t,s,e){return this.r=t.r+(s.r-t.r)*e,this.g=t.g+(s.g-t.g)*e,this.b=t.b+(s.b-t.b)*e,this}lerpHSL(t,s){this.getHSL(E),t.getHSL(C);const e=h(E.h,C.h,s),i=h(E.s,C.s,s),r=h(E.l,C.l,s);return this.setHSL(e,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,s=0){return this.r=t[s],this.g=t[s+1],this.b=t[s+2],this}toArray(t=[],s=0){return t[s]=this.r,t[s+1]=this.g,t[s+2]=this.b,t}fromBufferAttribute(t,s){return this.r=t.getX(s),this.g=t.getY(s),this.b=t.getZ(s),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}q.NAMES=B,q.prototype.isColor=!0,q.prototype.r=1,q.prototype.g=1,q.prototype.b=1;const F=new a,O=new l;class W{constructor(t,s,e){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=s,this.count=void 0!==t?t.length/s:0,this.normalized=!0===e,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,s,e){t*=this.itemSize,e*=s.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=s.array[e+i];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const s=this.array;let e=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new q),s[e++]=r.r,s[e++]=r.g,s[e++]=r.b}return this}copyVector2sArray(t){const s=this.array;let e=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new l),s[e++]=r.x,s[e++]=r.y}return this}copyVector3sArray(t){const s=this.array;let e=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new a),s[e++]=r.x,s[e++]=r.y,s[e++]=r.z}return this}copyVector4sArray(t){const s=this.array;let e=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new k),s[e++]=r.x,s[e++]=r.y,s[e++]=r.z,s[e++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let s=0,e=this.count;s<e;s++)O.fromBufferAttribute(this,s),O.applyMatrix3(t),this.setXY(s,O.x,O.y);else if(3===this.itemSize)for(let s=0,e=this.count;s<e;s++)F.fromBufferAttribute(this,s),F.applyMatrix3(t),this.setXYZ(s,F.x,F.y,F.z);return this}applyMatrix4(t){for(let s=0,e=this.count;s<e;s++)F.x=this.getX(s),F.y=this.getY(s),F.z=this.getZ(s),F.applyMatrix4(t),this.setXYZ(s,F.x,F.y,F.z);return this}applyNormalMatrix(t){for(let s=0,e=this.count;s<e;s++)F.x=this.getX(s),F.y=this.getY(s),F.z=this.getZ(s),F.applyNormalMatrix(t),this.setXYZ(s,F.x,F.y,F.z);return this}transformDirection(t){for(let s=0,e=this.count;s<e;s++)F.x=this.getX(s),F.y=this.getY(s),F.z=this.getZ(s),F.transformDirection(t),this.setXYZ(s,F.x,F.y,F.z);return this}set(t,s=0){return this.array.set(t,s),this}getX(t){return this.array[t*this.itemSize]}setX(t,s){return this.array[t*this.itemSize]=s,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,s){return this.array[t*this.itemSize+1]=s,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,s){return this.array[t*this.itemSize+2]=s,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,s){return this.array[t*this.itemSize+3]=s,this}setXY(t,s,e){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=e,this}setXYZ(t,s,e,i){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=e,this.array[t+2]=i,this}setXYZW(t,s,e,i,r){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=e,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}W.prototype.isBufferAttribute=!0;class N extends W{constructor(t,s,e){super(new Uint16Array(t),s,e)}}class H extends W{constructor(t,s,e){super(new Uint32Array(t),s,e)}}(class extends W{constructor(t,s,e){super(new Uint16Array(t),s,e)}}).prototype.isFloat16BufferAttribute=!0;class Z extends W{constructor(t,s,e){super(new Float32Array(t),s,e)}}const X=new c,Y=new a,P=new a,U=new a;class L{constructor(t=new a,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const e=this.center;void 0!==s?e.copy(s):X.setFromPoints(t).getCenter(e);let i=0;for(let s=0,r=t.length;s<r;s++)i=Math.max(i,e.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const e=this.center.distanceToSquared(t);return s.copy(t),e>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){U.subVectors(t,this.center);const s=U.lengthSq();if(s>this.radius*this.radius){const t=Math.sqrt(s),e=.5*(t-this.radius);this.center.add(U.multiplyScalar(e/t)),this.radius+=e}return this}union(t){return P.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Y.copy(t.center).add(P)),this.expandByPoint(Y.copy(t.center).sub(P)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}class I{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,s,e,i,r,h,n,a,o,u,l,c,m,y,d,x){const p=this.elements;return p[0]=t,p[4]=s,p[8]=e,p[12]=i,p[1]=r,p[5]=h,p[9]=n,p[13]=a,p[2]=o,p[6]=u,p[10]=l,p[14]=c,p[3]=m,p[7]=y,p[11]=d,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new I).fromArray(this.elements)}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],s[9]=e[9],s[10]=e[10],s[11]=e[11],s[12]=e[12],s[13]=e[13],s[14]=e[14],s[15]=e[15],this}copyPosition(t){const s=this.elements,e=t.elements;return s[12]=e[12],s[13]=e[13],s[14]=e[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,e){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,s,e){return this.set(t.x,s.x,e.x,0,t.y,s.y,e.y,0,t.z,s.z,e.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,e=t.elements,i=1/G.setFromMatrixColumn(t,0).length(),r=1/G.setFromMatrixColumn(t,1).length(),h=1/G.setFromMatrixColumn(t,2).length();return s[0]=e[0]*i,s[1]=e[1]*i,s[2]=e[2]*i,s[3]=0,s[4]=e[4]*r,s[5]=e[5]*r,s[6]=e[6]*r,s[7]=0,s[8]=e[8]*h,s[9]=e[9]*h,s[10]=e[10]*h,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const s=this.elements,e=t.x,i=t.y,r=t.z,h=Math.cos(e),n=Math.sin(e),a=Math.cos(i),o=Math.sin(i),u=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){const t=h*u,e=h*l,i=n*u,r=n*l;s[0]=a*u,s[4]=-a*l,s[8]=o,s[1]=e+i*o,s[5]=t-r*o,s[9]=-n*a,s[2]=r-t*o,s[6]=i+e*o,s[10]=h*a}else if("YXZ"===t.order){const t=a*u,e=a*l,i=o*u,r=o*l;s[0]=t+r*n,s[4]=i*n-e,s[8]=h*o,s[1]=h*l,s[5]=h*u,s[9]=-n,s[2]=e*n-i,s[6]=r+t*n,s[10]=h*a}else if("ZXY"===t.order){const t=a*u,e=a*l,i=o*u,r=o*l;s[0]=t-r*n,s[4]=-h*l,s[8]=i+e*n,s[1]=e+i*n,s[5]=h*u,s[9]=r-t*n,s[2]=-h*o,s[6]=n,s[10]=h*a}else if("ZYX"===t.order){const t=h*u,e=h*l,i=n*u,r=n*l;s[0]=a*u,s[4]=i*o-e,s[8]=t*o+r,s[1]=a*l,s[5]=r*o+t,s[9]=e*o-i,s[2]=-o,s[6]=n*a,s[10]=h*a}else if("YZX"===t.order){const t=h*a,e=h*o,i=n*a,r=n*o;s[0]=a*u,s[4]=r-t*l,s[8]=i*l+e,s[1]=l,s[5]=h*u,s[9]=-n*u,s[2]=-o*u,s[6]=e*l+i,s[10]=t-r*l}else if("XZY"===t.order){const t=h*a,e=h*o,i=n*a,r=n*o;s[0]=a*u,s[4]=-l,s[8]=o*u,s[1]=t*l+r,s[5]=h*u,s[9]=e*l-i,s[2]=i*l-e,s[6]=n*u,s[10]=r*l+t}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(D,t,Q)}lookAt(t,s,e){const i=this.elements;return K.subVectors(t,s),0===K.lengthSq()&&(K.z=1),K.normalize(),J.crossVectors(e,K),0===J.lengthSq()&&(1===Math.abs(e.z)?K.x+=1e-4:K.z+=1e-4,K.normalize(),J.crossVectors(e,K)),J.normalize(),$.crossVectors(K,J),i[0]=J.x,i[4]=$.x,i[8]=K.x,i[1]=J.y,i[5]=$.y,i[9]=K.y,i[2]=J.z,i[6]=$.z,i[10]=K.z,this}multiply(t,s){return void 0!==s?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,s)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,r=this.elements,h=e[0],n=e[4],a=e[8],o=e[12],u=e[1],l=e[5],c=e[9],m=e[13],y=e[2],d=e[6],x=e[10],p=e[14],g=e[3],f=e[7],b=e[11],M=e[15],z=i[0],w=i[4],_=i[8],S=i[12],A=i[1],v=i[5],k=i[9],B=i[13],E=i[2],C=i[6],T=i[10],R=i[14],V=i[3],q=i[7],F=i[11],O=i[15];return r[0]=h*z+n*A+a*E+o*V,r[4]=h*w+n*v+a*C+o*q,r[8]=h*_+n*k+a*T+o*F,r[12]=h*S+n*B+a*R+o*O,r[1]=u*z+l*A+c*E+m*V,r[5]=u*w+l*v+c*C+m*q,r[9]=u*_+l*k+c*T+m*F,r[13]=u*S+l*B+c*R+m*O,r[2]=y*z+d*A+x*E+p*V,r[6]=y*w+d*v+x*C+p*q,r[10]=y*_+d*k+x*T+p*F,r[14]=y*S+d*B+x*R+p*O,r[3]=g*z+f*A+b*E+M*V,r[7]=g*w+f*v+b*C+M*q,r[11]=g*_+f*k+b*T+M*F,r[15]=g*S+f*B+b*R+M*O,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[4],i=t[8],r=t[12],h=t[1],n=t[5],a=t[9],o=t[13],u=t[2],l=t[6],c=t[10],m=t[14];return t[3]*(+r*a*l-i*o*l-r*n*c+e*o*c+i*n*m-e*a*m)+t[7]*(+s*a*m-s*o*c+r*h*c-i*h*m+i*o*u-r*a*u)+t[11]*(+s*o*l-s*n*m-r*h*l+e*h*m+r*n*u-e*o*u)+t[15]*(-i*n*u-s*a*l+s*n*c+i*h*l-e*h*c+e*a*u)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,e){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=s,i[14]=e),this}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],r=t[3],h=t[4],n=t[5],a=t[6],o=t[7],u=t[8],l=t[9],c=t[10],m=t[11],y=t[12],d=t[13],x=t[14],p=t[15],g=l*x*o-d*c*o+d*a*m-n*x*m-l*a*p+n*c*p,f=y*c*o-u*x*o-y*a*m+h*x*m+u*a*p-h*c*p,b=u*d*o-y*l*o+y*n*m-h*d*m-u*n*p+h*l*p,M=y*l*a-u*d*a-y*n*c+h*d*c+u*n*x-h*l*x,z=s*g+e*f+i*b+r*M;if(0===z)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/z;return t[0]=g*w,t[1]=(d*c*r-l*x*r-d*i*m+e*x*m+l*i*p-e*c*p)*w,t[2]=(n*x*r-d*a*r+d*i*o-e*x*o-n*i*p+e*a*p)*w,t[3]=(l*a*r-n*c*r-l*i*o+e*c*o+n*i*m-e*a*m)*w,t[4]=f*w,t[5]=(u*x*r-y*c*r+y*i*m-s*x*m-u*i*p+s*c*p)*w,t[6]=(y*a*r-h*x*r-y*i*o+s*x*o+h*i*p-s*a*p)*w,t[7]=(h*c*r-u*a*r+u*i*o-s*c*o-h*i*m+s*a*m)*w,t[8]=b*w,t[9]=(y*l*r-u*d*r-y*e*m+s*d*m+u*e*p-s*l*p)*w,t[10]=(h*d*r-y*n*r+y*e*o-s*d*o-h*e*p+s*n*p)*w,t[11]=(u*n*r-h*l*r-u*e*o+s*l*o+h*e*m-s*n*m)*w,t[12]=M*w,t[13]=(u*d*i-y*l*i+y*e*c-s*d*c-u*e*x+s*l*x)*w,t[14]=(y*n*i-h*d*i-y*e*a+s*d*a+h*e*x-s*n*x)*w,t[15]=(h*l*i-u*n*i+u*e*a-s*l*a-h*e*c+s*n*c)*w,this}scale(t){const s=this.elements,e=t.x,i=t.y,r=t.z;return s[0]*=e,s[4]*=i,s[8]*=r,s[1]*=e,s[5]*=i,s[9]*=r,s[2]*=e,s[6]*=i,s[10]*=r,s[3]*=e,s[7]*=i,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,e,i))}makeTranslation(t,s,e){return this.set(1,0,0,t,0,1,0,s,0,0,1,e,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,s,-e,0,0,e,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,0,e,0,0,1,0,0,-e,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,-e,0,0,e,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const e=Math.cos(s),i=Math.sin(s),r=1-e,h=t.x,n=t.y,a=t.z,o=r*h,u=r*n;return this.set(o*h+e,o*n-i*a,o*a+i*n,0,o*n+i*a,u*n+e,u*a-i*h,0,o*a-i*n,u*a+i*h,r*a*a+e,0,0,0,0,1),this}makeScale(t,s,e){return this.set(t,0,0,0,0,s,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,s,e,i,r,h){return this.set(1,e,r,0,t,1,h,0,s,i,1,0,0,0,0,1),this}compose(t,s,e){const i=this.elements,r=s._x,h=s._y,n=s._z,a=s._w,o=r+r,u=h+h,l=n+n,c=r*o,m=r*u,y=r*l,d=h*u,x=h*l,p=n*l,g=a*o,f=a*u,b=a*l,M=e.x,z=e.y,w=e.z;return i[0]=(1-(d+p))*M,i[1]=(m+b)*M,i[2]=(y-f)*M,i[3]=0,i[4]=(m-b)*z,i[5]=(1-(c+p))*z,i[6]=(x+g)*z,i[7]=0,i[8]=(y+f)*w,i[9]=(x-g)*w,i[10]=(1-(c+d))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,s,e){const i=this.elements;let r=G.set(i[0],i[1],i[2]).length();const h=G.set(i[4],i[5],i[6]).length(),n=G.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],j.copy(this);const a=1/r,o=1/h,u=1/n;return j.elements[0]*=a,j.elements[1]*=a,j.elements[2]*=a,j.elements[4]*=o,j.elements[5]*=o,j.elements[6]*=o,j.elements[8]*=u,j.elements[9]*=u,j.elements[10]*=u,s.setFromRotationMatrix(j),e.x=r,e.y=h,e.z=n,this}makePerspective(t,s,e,i,r,h){void 0===h&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const n=this.elements,a=2*r/(s-t),o=2*r/(e-i),u=(s+t)/(s-t),l=(e+i)/(e-i),c=-(h+r)/(h-r),m=-2*h*r/(h-r);return n[0]=a,n[4]=0,n[8]=u,n[12]=0,n[1]=0,n[5]=o,n[9]=l,n[13]=0,n[2]=0,n[6]=0,n[10]=c,n[14]=m,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this}makeOrthographic(t,s,e,i,r,h){const n=this.elements,a=1/(s-t),o=1/(e-i),u=1/(h-r),l=(s+t)*a,c=(e+i)*o,m=(h+r)*u;return n[0]=2*a,n[4]=0,n[8]=0,n[12]=-l,n[1]=0,n[5]=2*o,n[9]=0,n[13]=-c,n[2]=0,n[6]=0,n[10]=-2*u,n[14]=-m,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this}equals(t){const s=this.elements,e=t.elements;for(let t=0;t<16;t++)if(s[t]!==e[t])return!1;return!0}fromArray(t,s=0){for(let e=0;e<16;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t[s+9]=e[9],t[s+10]=e[10],t[s+11]=e[11],t[s+12]=e[12],t[s+13]=e[13],t[s+14]=e[14],t[s+15]=e[15],t}}I.prototype.isMatrix4=!0;const G=new a,j=new I,D=new a(0,0,0),Q=new a(1,1,1),J=new a,$=new a,K=new a,tt=new I,st=new n;class et{constructor(t=0,s=0,e=0,i=et.DefaultOrder){this._x=t,this._y=s,this._z=e,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,e,i=this._order){return this._x=t,this._y=s,this._z=e,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,e=!0){const i=t.elements,h=i[0],n=i[4],a=i[8],o=i[1],u=i[5],l=i[9],c=i[2],m=i[6],y=i[10];switch(s){case"XYZ":this._y=Math.asin(r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,y),this._z=Math.atan2(-n,h)):(this._x=Math.atan2(m,u),this._z=0);break;case"YXZ":this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,y),this._z=Math.atan2(o,u)):(this._y=Math.atan2(-c,h),this._z=0);break;case"ZXY":this._x=Math.asin(r(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-c,y),this._z=Math.atan2(-n,u)):(this._y=0,this._z=Math.atan2(o,h));break;case"ZYX":this._y=Math.asin(-r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(m,y),this._z=Math.atan2(o,h)):(this._x=0,this._z=Math.atan2(-n,u));break;case"YZX":this._z=Math.asin(r(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,u),this._y=Math.atan2(-c,h)):(this._x=0,this._y=Math.atan2(a,y));break;case"XZY":this._z=Math.asin(-r(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(m,u),this._y=Math.atan2(a,h)):(this._x=Math.atan2(-l,y),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,!0===e&&this._onChangeCallback(),this}setFromQuaternion(t,s,e){return tt.makeRotationFromQuaternion(t),this.setFromRotationMatrix(tt,s,e)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return st.setFromEuler(this),this.setFromQuaternion(st,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new a(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}et.prototype.isEuler=!0,et.DefaultOrder="XYZ",et.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class it{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}class rt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,s,e,i,r,h,n,a,o){const u=this.elements;return u[0]=t,u[1]=i,u[2]=n,u[3]=s,u[4]=r,u[5]=a,u[6]=e,u[7]=h,u[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],this}extractBasis(t,s,e){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,r=this.elements,h=e[0],n=e[3],a=e[6],o=e[1],u=e[4],l=e[7],c=e[2],m=e[5],y=e[8],d=i[0],x=i[3],p=i[6],g=i[1],f=i[4],b=i[7],M=i[2],z=i[5],w=i[8];return r[0]=h*d+n*g+a*M,r[3]=h*x+n*f+a*z,r[6]=h*p+n*b+a*w,r[1]=o*d+u*g+l*M,r[4]=o*x+u*f+l*z,r[7]=o*p+u*b+l*w,r[2]=c*d+m*g+y*M,r[5]=c*x+m*f+y*z,r[8]=c*p+m*b+y*w,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[1],i=t[2],r=t[3],h=t[4],n=t[5],a=t[6],o=t[7],u=t[8];return s*h*u-s*n*o-e*r*u+e*n*a+i*r*o-i*h*a}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],r=t[3],h=t[4],n=t[5],a=t[6],o=t[7],u=t[8],l=u*h-n*o,c=n*a-u*r,m=o*r-h*a,y=s*l+e*c+i*m;if(0===y)return this.set(0,0,0,0,0,0,0,0,0);const d=1/y;return t[0]=l*d,t[1]=(i*o-u*e)*d,t[2]=(n*e-i*h)*d,t[3]=c*d,t[4]=(u*s-i*a)*d,t[5]=(i*r-n*s)*d,t[6]=m*d,t[7]=(e*a-o*s)*d,t[8]=(h*s-e*r)*d,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,e,i,r,h,n){const a=Math.cos(r),o=Math.sin(r);return this.set(e*a,e*o,-e*(a*h+o*n)+h+t,-i*o,i*a,-i*(-o*h+a*n)+n+s,0,0,1),this}scale(t,s){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=s,e[4]*=s,e[7]*=s,this}rotate(t){const s=Math.cos(t),e=Math.sin(t),i=this.elements,r=i[0],h=i[3],n=i[6],a=i[1],o=i[4],u=i[7];return i[0]=s*r+e*a,i[3]=s*h+e*o,i[6]=s*n+e*u,i[1]=-e*r+s*a,i[4]=-e*h+s*o,i[7]=-e*n+s*u,this}translate(t,s){const e=this.elements;return e[0]+=t*e[2],e[3]+=t*e[5],e[6]+=t*e[8],e[1]+=s*e[2],e[4]+=s*e[5],e[7]+=s*e[8],this}equals(t){const s=this.elements,e=t.elements;for(let t=0;t<9;t++)if(s[t]!==e[t])return!1;return!0}fromArray(t,s=0){for(let e=0;e<9;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}rt.prototype.isMatrix3=!0;let ht=0;const nt=new a,at=new n,ot=new I,ut=new a,lt=new a,ct=new a,mt=new n,yt=new a(1,0,0),dt=new a(0,1,0),xt=new a(0,0,1),pt={type:"added"},gt={type:"removed"};class ft extends v{constructor(){super(),Object.defineProperty(this,"id",{value:ht++}),this.uuid=i(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ft.DefaultUp.clone();const t=new a,s=new et,e=new n,r=new a(1,1,1);s._onChange((function(){e.setFromEuler(s,!1)})),e._onChange((function(){s.setFromQuaternion(e,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:s},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new I},normalMatrix:{value:new rt}}),this.matrix=new I,this.matrixWorld=new I,this.matrixAutoUpdate=ft.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new it,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,s){this.quaternion.setFromAxisAngle(t,s)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,s){return at.setFromAxisAngle(t,s),this.quaternion.multiply(at),this}rotateOnWorldAxis(t,s){return at.setFromAxisAngle(t,s),this.quaternion.premultiply(at),this}rotateX(t){return this.rotateOnAxis(yt,t)}rotateY(t){return this.rotateOnAxis(dt,t)}rotateZ(t){return this.rotateOnAxis(xt,t)}translateOnAxis(t,s){return nt.copy(t).applyQuaternion(this.quaternion),this.position.add(nt.multiplyScalar(s)),this}translateX(t){return this.translateOnAxis(yt,t)}translateY(t){return this.translateOnAxis(dt,t)}translateZ(t){return this.translateOnAxis(xt,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(ot.copy(this.matrixWorld).invert())}lookAt(t,s,e){t.isVector3?ut.copy(t):ut.set(t,s,e);const i=this.parent;this.updateWorldMatrix(!0,!1),lt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ot.lookAt(lt,ut,this.up):ot.lookAt(ut,lt,this.up),this.quaternion.setFromRotationMatrix(ot),i&&(ot.extractRotation(i.matrixWorld),at.setFromRotationMatrix(ot),this.quaternion.premultiply(at.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(pt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const s=this.children.indexOf(t);return-1!==s&&(t.parent=null,this.children.splice(s,1),t.dispatchEvent(gt)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const s=this.children[t];s.parent=null,s.dispatchEvent(gt)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),ot.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),ot.multiply(t.parent.matrixWorld)),t.applyMatrix4(ot),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,s){if(this[t]===s)return this;for(let e=0,i=this.children.length;e<i;e++){const i=this.children[e].getObjectByProperty(t,s);if(void 0!==i)return i}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lt,t,ct),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lt,mt,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(s[8],s[9],s[10]).normalize()}raycast(){}traverse(t){t(this);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].traverseVisible(t)}traverseAncestors(t){const s=this.parent;null!==s&&(t(s),s.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].updateMatrixWorld(t)}updateWorldMatrix(t,s){const e=this.parent;if(!0===t&&null!==e&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===s){const t=this.children;for(let s=0,e=t.length;s<e;s++)t[s].updateWorldMatrix(!1,!0)}}toJSON(t){const s=void 0===t||"string"==typeof t,e={};s&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(s,e){return void 0===s[e.uuid]&&(s[e.uuid]=e.toJSON(t)),e.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){const e=s.shapes;if(Array.isArray(e))for(let s=0,i=e.length;s<i;s++){const i=e[s];r(t.shapes,i)}else r(t.shapes,e)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const s=[];for(let e=0,i=this.material.length;e<i;e++)s.push(r(t.materials,this.material[e]));i.material=s}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let s=0;s<this.children.length;s++)i.children.push(this.children[s].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let s=0;s<this.animations.length;s++){const e=this.animations[s];i.animations.push(r(t.animations,e))}}if(s){const s=h(t.geometries),i=h(t.materials),r=h(t.textures),n=h(t.images),a=h(t.shapes),o=h(t.skeletons),u=h(t.animations);s.length>0&&(e.geometries=s),i.length>0&&(e.materials=i),r.length>0&&(e.textures=r),n.length>0&&(e.images=n),a.length>0&&(e.shapes=a),o.length>0&&(e.skeletons=o),u.length>0&&(e.animations=u)}return e.object=i,e;function h(t){const s=[];for(const e in t){const i=t[e];delete i.metadata,s.push(i)}return s}}clone(t){return(new this.constructor).copy(this,t)}copy(t,s=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===s)for(let s=0;s<t.children.length;s++){const e=t.children[s];this.add(e.clone())}return this}}ft.DefaultUp=new a(0,1,0),ft.DefaultMatrixAutoUpdate=!0,ft.prototype.isObject3D=!0;let bt=0;const Mt=new I,zt=new ft,wt=new a,_t=new c,St=new c,At=new a;class vt extends v{constructor(){super(),Object.defineProperty(this,"id",{value:bt++}),this.uuid=i(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(function(t){if(0===t.length)return-1/0;let s=t[0];for(let e=1,i=t.length;e<i;++e)t[e]>s&&(s=t[e]);return s}(t)>65535?H:N)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,s){return this.attributes[t]=s,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,s,e=0){this.groups.push({start:t,count:s,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,s){this.drawRange.start=t,this.drawRange.count=s}applyMatrix4(t){const s=this.attributes.position;void 0!==s&&(s.applyMatrix4(t),s.needsUpdate=!0);const e=this.attributes.normal;if(void 0!==e){const s=(new rt).getNormalMatrix(t);e.applyNormalMatrix(s),e.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Mt.makeRotationFromQuaternion(t),this.applyMatrix4(Mt),this}rotateX(t){return Mt.makeRotationX(t),this.applyMatrix4(Mt),this}rotateY(t){return Mt.makeRotationY(t),this.applyMatrix4(Mt),this}rotateZ(t){return Mt.makeRotationZ(t),this.applyMatrix4(Mt),this}translate(t,s,e){return Mt.makeTranslation(t,s,e),this.applyMatrix4(Mt),this}scale(t,s,e){return Mt.makeScale(t,s,e),this.applyMatrix4(Mt),this}lookAt(t){return zt.lookAt(t),zt.updateMatrix(),this.applyMatrix4(zt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wt).negate(),this.translate(wt.x,wt.y,wt.z),this}setFromPoints(t){const s=[];for(let e=0,i=t.length;e<i;e++){const i=t[e];s.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Z(s,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new c);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new a(-1/0,-1/0,-1/0),new a(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),s)for(let t=0,e=s.length;t<e;t++){const e=s[t];_t.setFromBufferAttribute(e),this.morphTargetsRelative?(At.addVectors(this.boundingBox.min,_t.min),this.boundingBox.expandByPoint(At),At.addVectors(this.boundingBox.max,_t.max),this.boundingBox.expandByPoint(At)):(this.boundingBox.expandByPoint(_t.min),this.boundingBox.expandByPoint(_t.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new L);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new a,1/0);if(t){const e=this.boundingSphere.center;if(_t.setFromBufferAttribute(t),s)for(let t=0,e=s.length;t<e;t++){const e=s[t];St.setFromBufferAttribute(e),this.morphTargetsRelative?(At.addVectors(_t.min,St.min),_t.expandByPoint(At),At.addVectors(_t.max,St.max),_t.expandByPoint(At)):(_t.expandByPoint(St.min),_t.expandByPoint(St.max))}_t.getCenter(e);let i=0;for(let s=0,r=t.count;s<r;s++)At.fromBufferAttribute(t,s),i=Math.max(i,e.distanceToSquared(At));if(s)for(let r=0,h=s.length;r<h;r++){const h=s[r],n=this.morphTargetsRelative;for(let s=0,r=h.count;s<r;s++)At.fromBufferAttribute(h,s),n&&(wt.fromBufferAttribute(t,s),At.add(wt)),i=Math.max(i,e.distanceToSquared(At))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,s=this.attributes;if(null===t||void 0===s.position||void 0===s.normal||void 0===s.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const e=t.array,i=s.position.array,r=s.normal.array,h=s.uv.array,n=i.length/3;void 0===s.tangent&&this.setAttribute("tangent",new W(new Float32Array(4*n),4));const o=s.tangent.array,u=[],c=[];for(let t=0;t<n;t++)u[t]=new a,c[t]=new a;const m=new a,y=new a,d=new a,x=new l,p=new l,g=new l,f=new a,b=new a;function M(t,s,e){m.fromArray(i,3*t),y.fromArray(i,3*s),d.fromArray(i,3*e),x.fromArray(h,2*t),p.fromArray(h,2*s),g.fromArray(h,2*e),y.sub(m),d.sub(m),p.sub(x),g.sub(x);const r=1/(p.x*g.y-g.x*p.y);isFinite(r)&&(f.copy(y).multiplyScalar(g.y).addScaledVector(d,-p.y).multiplyScalar(r),b.copy(d).multiplyScalar(p.x).addScaledVector(y,-g.x).multiplyScalar(r),u[t].add(f),u[s].add(f),u[e].add(f),c[t].add(b),c[s].add(b),c[e].add(b))}let z=this.groups;0===z.length&&(z=[{start:0,count:e.length}]);for(let t=0,s=z.length;t<s;++t){const s=z[t],i=s.start;for(let t=i,r=i+s.count;t<r;t+=3)M(e[t+0],e[t+1],e[t+2])}const w=new a,_=new a,S=new a,A=new a;function v(t){S.fromArray(r,3*t),A.copy(S);const s=u[t];w.copy(s),w.sub(S.multiplyScalar(S.dot(s))).normalize(),_.crossVectors(A,s);const e=_.dot(c[t])<0?-1:1;o[4*t]=w.x,o[4*t+1]=w.y,o[4*t+2]=w.z,o[4*t+3]=e}for(let t=0,s=z.length;t<s;++t){const s=z[t],i=s.start;for(let t=i,r=i+s.count;t<r;t+=3)v(e[t+0]),v(e[t+1]),v(e[t+2])}}computeVertexNormals(){const t=this.index,s=this.getAttribute("position");if(void 0!==s){let e=this.getAttribute("normal");if(void 0===e)e=new W(new Float32Array(3*s.count),3),this.setAttribute("normal",e);else for(let t=0,s=e.count;t<s;t++)e.setXYZ(t,0,0,0);const i=new a,r=new a,h=new a,n=new a,o=new a,u=new a,l=new a,c=new a;if(t)for(let a=0,m=t.count;a<m;a+=3){const m=t.getX(a+0),y=t.getX(a+1),d=t.getX(a+2);i.fromBufferAttribute(s,m),r.fromBufferAttribute(s,y),h.fromBufferAttribute(s,d),l.subVectors(h,r),c.subVectors(i,r),l.cross(c),n.fromBufferAttribute(e,m),o.fromBufferAttribute(e,y),u.fromBufferAttribute(e,d),n.add(l),o.add(l),u.add(l),e.setXYZ(m,n.x,n.y,n.z),e.setXYZ(y,o.x,o.y,o.z),e.setXYZ(d,u.x,u.y,u.z)}else for(let t=0,n=s.count;t<n;t+=3)i.fromBufferAttribute(s,t+0),r.fromBufferAttribute(s,t+1),h.fromBufferAttribute(s,t+2),l.subVectors(h,r),c.subVectors(i,r),l.cross(c),e.setXYZ(t+0,l.x,l.y,l.z),e.setXYZ(t+1,l.x,l.y,l.z),e.setXYZ(t+2,l.x,l.y,l.z);this.normalizeNormals(),e.needsUpdate=!0}}merge(t,s){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===s&&(s=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const e=this.attributes;for(const i in e){if(void 0===t.attributes[i])continue;const r=e[i].array,h=t.attributes[i],n=h.array,a=h.itemSize*s,o=Math.min(n.length,r.length-a);for(let t=0,s=a;t<o;t++,s++)r[s]=n[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let s=0,e=t.count;s<e;s++)At.fromBufferAttribute(t,s),At.normalize(),t.setXYZ(s,At.x,At.y,At.z)}toNonIndexed(){function t(t,s){const e=t.array,i=t.itemSize,r=t.normalized,h=new e.constructor(s.length*i);let n=0,a=0;for(let r=0,o=s.length;r<o;r++){n=t.isInterleavedBufferAttribute?s[r]*t.data.stride+t.offset:s[r]*i;for(let t=0;t<i;t++)h[a++]=e[n++]}return new W(h,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const s=new vt,e=this.index.array,i=this.attributes;for(const r in i){const h=t(i[r],e);s.setAttribute(r,h)}const r=this.morphAttributes;for(const i in r){const h=[],n=r[i];for(let s=0,i=n.length;s<i;s++){const i=t(n[s],e);h.push(i)}s.morphAttributes[i]=h}s.morphTargetsRelative=this.morphTargetsRelative;const h=this.groups;for(let t=0,e=h.length;t<e;t++){const e=h[t];s.addGroup(e.start,e.count,e.materialIndex)}return s}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const s=this.parameters;for(const e in s)void 0!==s[e]&&(t[e]=s[e]);return t}t.data={attributes:{}};const s=this.index;null!==s&&(t.data.index={type:s.array.constructor.name,array:Array.prototype.slice.call(s.array)});const e=this.attributes;for(const s in e){const i=e[s];t.data.attributes[s]=i.toJSON(t.data)}const i={};let r=!1;for(const s in this.morphAttributes){const e=this.morphAttributes[s],h=[];for(let s=0,i=e.length;s<i;s++){const i=e[s];h.push(i.toJSON(t.data))}h.length>0&&(i[s]=h,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const h=this.groups;h.length>0&&(t.data.groups=JSON.parse(JSON.stringify(h)));const n=this.boundingSphere;return null!==n&&(t.data.boundingSphere={center:n.center.toArray(),radius:n.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const s={};this.name=t.name;const e=t.index;null!==e&&this.setIndex(e.clone(s));const i=t.attributes;for(const t in i){const e=i[t];this.setAttribute(t,e.clone(s))}const r=t.morphAttributes;for(const t in r){const e=[],i=r[t];for(let t=0,r=i.length;t<r;t++)e.push(i[t].clone(s));this.morphAttributes[t]=e}this.morphTargetsRelative=t.morphTargetsRelative;const h=t.groups;for(let t=0,s=h.length;t<s;t++){const s=h[t];this.addGroup(s.start,s.count,s.materialIndex)}const n=t.boundingBox;null!==n&&(this.boundingBox=n.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}vt.prototype.isBufferGeometry=!0;class kt extends vt{constructor(t,s,e,i,r,h,n,o){super(),this.type="TerrainTileGeometry";const u=e,l=i,m=u+1,y=l+1,d=t/u,x=s/l,p=[],g=[],f=[];let b=1/0,M=-1/0;void 0===n.dtmWidth&&(n.dtmWidth=n.terrainWidth+1);const z=m+n.left,w=y+n.top,_=o.z,S=o.x;let A,v,k=o.y;for(let t=n.top;t<w;t++){v=S,A=t*n.dtmWidth+n.left+n.dtmOffset;for(let s=n.left;s<z;s++){const e=r[A++]/h-_;g.push(v,k,e),e<b&&(b=e),e>M&&(M=e),f.push(s/n.terrainWidth),f.push(1-t/n.terrainHeight),v+=d}k-=x}this.boundingBox=new c(new a(o.x,o.y-s,b),new a(o.x+t,o.y,M));for(let t=0;t<l;t++)for(let s=0;s<u;s++){const e=s+m*t,i=s+m*(t+1),r=s+1+m*(t+1),h=s+1+m*t;Math.abs(g[3*e+2]-g[3*h+2])<Math.abs(g[3*i+2]-g[3*r+2])?(p.push(e,i,h),p.push(i,r,h)):(p.push(e,i,r),p.push(r,h,e))}this.setIndex(p),this.setAttribute("position",new Z(g,3)),this.setAttribute("uv",new Z(f,2)),this.computeVertexNormals()}}class Bt extends vt{constructor(t,s,e,i,r){super(),this.type="FlatTileGeometry";const h=[],n=[];h.push(i.x,i.y-s,r),h.push(i.x,i.y,r),h.push(i.x+t,i.y,r),h.push(i.x+t,i.y-s,r),n.push(e.left/e.terrainWidth,e.bottom/e.terrainHeight),n.push(e.left/e.terrainWidth,1-e.top/e.terrainHeight),n.push(1-e.right/e.terrainWidth,1-e.top/e.terrainHeight),n.push(1-e.right/e.terrainWidth,e.bottom/e.terrainHeight),this.boundingBox=new c(new a(i.x,i.y-s,0),new a(i.x+t,i.y,0)),this.setIndex([0,2,1,0,3,2]),this.setAttribute("position",new Z(h,3)),this.setAttribute("uv",new Z(n,2)),this.computeVertexNormals()}}const Et=6378137*Math.PI;var Ct;function Tt(t){const s=Ct.tileSet;let e;if("dzz"===s.encoding){const i=s.divisions+1;e=function(t,s){const e=new Uint8Array(t),i=new Uint32Array(s);if(4===e.length)return i;let r=0,h=0;for(let t=0;t<e.length;t++){let s=0,n=0,a=e[t];for(;128&a;)s|=(127&a)<<n,n+=7,a=e[++t];s|=a<<n,r+=1&s?s>>1^-1:s>>1,i[h++]=r}return i}(t,i*i)}else e=new Uint16Array(t);switch(Ct.request){case"tile":!function(t){const s=Ct.clip,e=Ct.offsets,i=Ct.tileSet,r=Ct.divisions,h=r-s.left-s.right,n=r-s.top-s.bottom,a=Ct.resolution,o=a*h,u=a*n;let l;s.terrainHeight=r,s.terrainWidth=r,e.x=a*(Ct.x*r+s.left)-Et-e.x,e.y=Et-a*(Ct.y*r+s.top)-e.y,l=i.isFlat?new Bt(o,u,s,e,Ct.flatZ):new kt(o,u,h,n,t,i.dtmScale,s,e);const c=l.boundingBox,m={min:{x:c.min.x,y:c.min.y,z:c.min.z},max:{x:c.max.x,y:c.max.y,z:c.max.z}},y=l.index.array.buffer,d={},x=[],p=l.attributes;for(const t in p){const s=p[t],e=s.array.buffer;d[t]={array:e,itemSize:s.itemSize},x.push(e)}postMessage({status:"ok",index:y,attributes:d,boundingBox:m,canZoom:!0},x)}(e);break;case"height":!function(t){const s=Ct.dataOffsets,e=Ct.points,i=s.length;for(let r=0;r<i;r++)e[r].z=t[s[r]]/Ct.tileSet.dtmScale;postMessage({status:"ok",points:e})}(e);break;default:console.log("webTileWorker: unknown request type"),postMessage({status:"nomap"})}}onmessage=function(s){Ct=s.data;Ct.tileSet.isFlat?Tt(null):new t(Ct).then((t=>Tt(t))).catch((()=>{postMessage({status:"nomap"})}))}}));
